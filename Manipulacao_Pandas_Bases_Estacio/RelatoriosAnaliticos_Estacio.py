# -*- coding: utf-8 -*-
"""analiticoEstacio.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Nnhkfunoi9zznrR45z8QzV0qHZnh5POh
"""

import pandas as pd

"""# IMPORTANDO ARQUIVOS CSV

df_base1 = pd.read_excel("inscritos.xlsx",sheet_name=0, skiprows=0)
df_base2 = pd.read_excel("inscritos.xlsx",sheet_name=1, skiprows=0)
df_base3 = pd.read_excel("inscritos.xlsx",sheet_name=2, skiprows=0)

df_base4 = pd.read_excel("financeiras.xlsx",sheet_name=0, skiprows=0)

df_base5 = pd.read_excel("enem.xlsx",sheet_name=0, skiprows=0)
df_base6 = pd.read_excel("enem.xlsx",sheet_name=1, skiprows=0)
df_base7 = pd.read_excel("enem.xlsx",sheet_name=2, skiprows=0)

df_base8 = pd.read_excel("classificados.xlsx",sheet_name=0, skiprows=0)
df_base9 = pd.read_excel("classificados.xlsx",sheet_name=1, skiprows=0)
df_base10 = pd.read_excel("classificados.xlsx",sheet_name=2, skiprows=0)
"""

df_analiticoead = pd.read_csv("analitico.txt", sep = "|",encoding= 'latin-1',error_bad_lines=False)
df_analiticopres = pd.read_csv("analitico2.txt", sep = "|",encoding= 'latin-1',error_bad_lines=False)

"""# CONCATENANDO TABELAS"""

df_basegeral = pd.concat([df_analiticoead,df_analiticopres])

#df_ontem = pd.concat([df_base1,df_base2,df_base3,df_base4,df_base5,df_base6,df_base7,df_base8,df_base9,df_base10])

"""# APAGANDO COLUNAS

"""

df_basegeral = df_basegeral.drop(['COD_INSTITUICAO','NOM_INSTITUICAO','COD_CAMPUS','VAL_PAGO_INSCRICAO','NUM_IDENTIDADE','END_CANDIDATO','NUM_END_CANDIDATO','TXT_COMPL_ENDERECO','NOM_BAIRRO','NOM_MUNICIPIO','SGL_UF','END_EMAIL','COD_CURSO','NUM_HABILITACAO','NOM_HABILITACAO','COD_TURNO','COD_SITUACAO_INSCRICAO','DT_MATRICULA','COD_MATRICULA','VAL_CARNE_MATRICULA','NOM_TIPO_BOLSA','PERCENTUAL','TXT_ENTRADA_ACADEMICA','IND_PENDENTE_PAGAMENTO','NOM_MATERIA_PROVA','VAL_NOTA_PROVA','NOM_CONCURSO','PERIODO_ACADEMICO'], axis='columns')

#df_ontem = df_ontem[['INSCRICAO','OBS','ATENDENTE']].copy()

"""# EXTRAINDO CAMPUS MANAUS"""

df_basegeral = df_basegeral.loc[df_basegeral['NOM_CAMPUS'].isin(['CONSTANTINO NERY','EAD MANAUS - SÃO JOSÉ I - AM','EAD MANAUS - CENTRO - AM','EAD MANAUS - CIDADE NOVA II - AM','EAD MANAUS - PARQUE 10 DE NOVEMBRO - AM','EAD MANAUS - PLANALTO - AM','EAD MANAUS - TIRADENTES - AM','EAD CONSTANTINO NERY - AM','EAD ITACOATIARA - AM','EAD IRANDUBA - CENTRO - AM','EAD MANACAPURU - AM'])].copy()

"""# TIPOS DE COLUNAS

"""

df_basegeral[['NUM_SEQ_CANDIDATO','CPF_CANDIDATO','NUM_TELEFONE']] = df_basegeral[['NUM_SEQ_CANDIDATO','CPF_CANDIDATO','NUM_TELEFONE']].fillna(0).astype(int)
df_basegeral['CPF_CANDIDATO'] = df_basegeral['CPF_CANDIDATO'].astype(str)
df_basegeral['NUM_INSC_ENEM'] = df_basegeral['NUM_INSC_ENEM'].fillna(0).astype(int)
df_basegeral['NUM_INSC_ENEM'] = df_basegeral['NUM_INSC_ENEM'].astype(str)

df_basegeral.dtypes

"""# RENOMEANDO COLUNAS"""

df_basegeral = df_basegeral.rename(columns={'NOM_CAMPUS':'CAMPUS','NUM_SEQ_CANDIDATO':'NUM_CANDIDATO','NUM_SEQ_INSCRICAO':'INSCRICAO','NOM_CANDIDATO':'NOME','CPF_CANDIDATO':'CPF','NUM_TELEFONE':'TELEFONE','NUM_TELEF_CELULAR':'CELULAR','NOM_CURSO':'CURSO','NOM_TURNO':'TURNO','NOM_SITUACAO_INSCRICAO':'SITUACAO','NOM_MOTIVO_ELIMINACAO':'MOTIVO_ELIMI','NOM_TIPO_CONCURSO':'CONCURSO','DT_PGTO_CARNE_MATRICULA':'DT_PGTO'})

#df_basegeral = pd.merge(df_basegeral,df_ontem, on =['INSCRICAO'], how='left')

"""# FILTRANDO DADOS"""

df_enem = df_basegeral.loc[df_basegeral['CONCURSO'].isin(['ENEM EAD','ENEM','ENEM EAD SEMIPRESENCIAL'])].copy()
df_enem = df_enem.loc[df_enem['SITUACAO']=='Aprovado/Classificado']

df_vest = df_basegeral.loc[df_basegeral['CONCURSO'].isin(['VESTIBULAR AGENDADO','VESTIBULAR DIGITAL','VESTIBULAR FLEX'])].copy()
df_vest = df_vest.drop(['VAL_HUMANAS','VAL_NATUREZA','VAL_LINGUAGENS','VAL_MATEMATICA','VAL_REDACAO','VAL_NOTA_OBJETIVA_ENEM','VAL_NOTA_REDACAO_ENEM','NUM_INSC_ENEM','ANO_PARTICIPACAO_ENEM'], axis='columns')

df_vestclassificados = df_vest.loc[df_vest['SITUACAO']=='Aprovado/Classificado']

df_financeiras = df_vestclassificados[df_vestclassificados['DT_PGTO'].notnull()]

df_vestclassificados = df_vestclassificados[df_vestclassificados['DT_PGTO'].isnull()]

df_vestfaltoso = df_vest.loc[df_vest['SITUACAO']=='ELIMINADO']

df_vestinscritos = df_vest.loc[df_vest['SITUACAO']=='Inscrição confirmada']

"""# RETIRANDO DUPLICADOS"""

df_enem = df_enem.drop_duplicates(subset='NOME', keep='first')
df_vestclassificados = df_vestclassificados.drop_duplicates(subset='NOME', keep='first')
df_vestfaltoso = df_vestfaltoso.drop_duplicates(subset='NOME', keep='first')
df_vestinscritos = df_vestinscritos.drop_duplicates(subset='NOME', keep='first')
df_financeiras = df_financeiras.drop_duplicates(subset='NOME', keep='first')

"""# DIVIDINDO ABAS"""

df_enem1 = df_enem.loc[df_enem['CONCURSO']=='ENEM EAD']
df_enem2 = df_enem.loc[df_enem['CONCURSO']=='ENEM EAD SEMIPRESENCIAL']
df_enem3 = df_enem.loc[df_enem['CONCURSO']=='ENEM']

df_classificados1 = df_vestclassificados.loc[df_vestclassificados['CONCURSO']=='VESTIBULAR DIGITAL']
df_classificados2 = df_vestclassificados.loc[df_vestclassificados['CONCURSO']=='VESTIBULAR FLEX']
df_classificados3 = df_vestclassificados.loc[df_vestclassificados['CONCURSO']=='VESTIBULAR AGENDADO']

df_faltoso1 = df_vestfaltoso.loc[df_vestfaltoso['CONCURSO']=='VESTIBULAR DIGITAL']
df_faltoso2 = df_vestfaltoso.loc[df_vestfaltoso['CONCURSO']=='VESTIBULAR FLEX']
df_faltoso3 = df_vestfaltoso.loc[df_vestfaltoso['CONCURSO']=='VESTIBULAR AGENDADO']

df_inscrito1 = df_vestinscritos.loc[df_vestinscritos['CONCURSO']=='VESTIBULAR DIGITAL']
df_inscrito2 = df_vestinscritos.loc[df_vestinscritos['CONCURSO']=='VESTIBULAR FLEX']
df_inscrito3 = df_vestinscritos.loc[df_vestinscritos['CONCURSO']=='VESTIBULAR AGENDADO']

"""# OUTPUT DE DADOS"""

enem = pd.ExcelWriter('base_enem.xlsx')
df_enem1.to_excel(enem, sheet_name = 'EAD',index=False)
df_enem2.to_excel(enem, sheet_name = 'FLEX',index=False)
df_enem3.to_excel(enem, sheet_name = 'PRESENCIAL',index=False)
enem.save()

classificados = pd.ExcelWriter('vest_Classificados.xlsx')
df_classificados1.to_excel(classificados, sheet_name = 'EAD',index=False)
df_classificados2.to_excel(classificados, sheet_name = 'FLEX',index=False)
df_classificados3.to_excel(classificados, sheet_name = 'PRESENCIAL',index=False)
classificados.save()

faltosos = pd.ExcelWriter('vest_Faltosos.xlsx')
df_faltoso1.to_excel(faltosos, sheet_name = 'EAD',index=False)
df_faltoso2.to_excel(faltosos, sheet_name = 'FLEX',index=False)
df_faltoso3.to_excel(faltosos, sheet_name = 'PRESENCIAL',index=False)
faltosos.save()

inscritos = pd.ExcelWriter('vest_Inscritos.xlsx')
df_inscrito1.to_excel(inscritos, sheet_name = 'EAD',index=False)
df_inscrito2.to_excel(inscritos, sheet_name = 'FLEX',index=False)
df_inscrito3.to_excel(inscritos, sheet_name = 'PRESENCIAL',index=False)
inscritos.save()

financeiras = pd.ExcelWriter('vest_financeiras.xlsx')
df_financeiras.to_excel(financeiras, sheet_name = 'pagos',index=False)
financeiras.save()

vest = pd.ExcelWriter('vest.xlsx')
df_vest.to_excel(vest, sheet_name = 'vest',index=False)
vest.save()